---
title: "ds assessment 2 summary document"
format: html
editor: visual
---

# Packages

```{r}
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(gridExtra)
library(janeaustenr)
library(dplyr)
library(stringr)
library(tidytext)
library(magrittr)
library(DT)
```

# Data 

The following data are fake and for demonstration purposes only

```{r}
#| warning: false
#| message: false
#| echo: false

# data easier to work with plotting
data <- read_csv("data/ds-assessment-anonymized-fake-data.csv") %>% slice(3:nrow(.)) %>%
  mutate(`Duration (in seconds)` = as.numeric(`Duration (in seconds)`))
# all MC questions in survey
MC <- data |>
  select(`Storm Paths`, `Movie Budgets 1_1`, `Movie Budgets 1_2`, `Movie Budgets 1_3`, `Movie Budgets 1_4`, `Movie Budgets 2`, `Disease Screening _1`, `Disease Screening _2`, `Disease Screening _3`, `Disease Screening _4`, `He Said She Said 1/3`, `He Said She Said 2/3` , `He Said She Said 3/3`, `Build-a-Plot`, `Realty Tree 1/2`, `Realty Tree 2/2`, `Website Testing 1/3`, `Website Testing 2/3`, `Website Testing 3/3` )


# data to work make tables
# has question information
data_question <- read_csv("data/ds-assessment-anonymized-fake-data.csv") %>% replace(is.na(.), "0")

# all MC questions in survey
MC_questions <- data_question |>
  select(`Storm Paths`, `Movie Budgets 1_1`, `Movie Budgets 1_2`, `Movie Budgets 1_3`, `Movie Budgets 1_4`, `Movie Budgets 2`, `Disease Screening _1`, `Disease Screening _2`, `Disease Screening _3`, `Disease Screening _4`, `He Said She Said 1/3`, `He Said She Said 2/3` , `He Said She Said 3/3`, `Build-a-Plot`, `Realty Tree 1/2`, `Realty Tree 2/2`, `Website Testing 1/3`, `Website Testing 2/3`, `Website Testing 3/3` )
```

# Report

There are `r nrow(data) - 2` participants in our data set. Of the `r nrow(data) - 2` participants, `r sum(data$Finished == TRUE)` made it to the last question of the survey. The average time it took to complete this survey was `r round(mean(data$"Duration (in seconds)", na.rm = T)/60, 2)` minutes, with `r sum((data$"Duration (in seconds)"/60) > 60)` students taking more than 60 minutes to complete the assessment, and `r sum((data$"Duration (in seconds)"/60) > 120)` students taking more than 120 minutes to complete the assessment.  


```{r}
#| echo: false

att <- data |>
  select(contains("Attention")) |>
  mutate(`Attention Check 1/2` = replace_na(`Attention Check 1/2`, "0"),
        `Attention Check 2/2` = replace_na(`Attention Check 2/2`, "0")) |>
  filter(`Attention Check 1/2` != "I am passing this attention check" | 
         `Attention Check 2/2` != "$262,972") |>
  nrow()

fast <- data |>
  filter(`Duration (in seconds)` <= 600) |>
  nrow()
```

`r att` students failed at least one of the attention checks in the survey. `r fast` students completed the assessment in 10 minutes or less.

## Missing observations 

```{r}
#| echo: false
set.cutoff <- .8
set.cutoff.correct <- .5
```

Below are the percentages of missing observations by question. Questions that have at least `r set.cutoff` percent missing are highlighted in red. 

```{r}
#| echo: false
percent_missing <- colSums(
  is.na(
    data |>
      select(17:ncol(data)) 
  )) / nrow(data)

percent_missing <- as.data.frame(percent_missing)

color.me <- which(percent_missing >=set.cutoff) # set cut off to highlight table

percent_missing |>
  data.frame() |>
  kable(booktabs = T) %>%
  kable_styling() %>%
  row_spec(color.me, bold = T, color = "white", background = "red")
                            
```

# Multiple Choice 

## Percent Correct

Below is a table that shares the percentage of correct responses across `r nrow(data)` students. Questions are ordered as they appear in the survey and highlighted in red to indicate a percentage less than `r set.cutoff.correct`. 

```{r}
#| echo: false
#| warning: false

# another path
tmp <- MC_questions |>
  # just showing off with this trick ngl
  dplyr::select(`Storm Paths`, contains("Realty"), contains("Movie"), contains("Screening"), contains("He Said"), contains("Build"), contains("Website"))

names(tmp) <- tmp[1,] |> unlist() |> unname()

tmp2 <- tmp |>
  slice(-c(1:2)) |>
  mutate(id = 1:n()) |>
  pivot_longer(1:ncol(tmp), names_to = "question", values_to = "answer") 

# that structure (tmp2) can be manipulated to build whatever summary you need
# for example:

#tmp2 |>
  #group_by(question) |>
  #count(answer) |>
  #pivot_wider(names_from = "answer", values_from = "n") 
  
# to get percent correct
# assuming the correct answers are given for each question in a table
key <- tibble(
  question = unique(tmp2$question),
  correct = c( "City a", "Can't be determined from the information given", "$151,424", "Plot A", "Plot D", "Plot D", "Plot B,Plot D", "Horror", "Plot B", "Plot C", "Plot B", "Plot B", "FALSE", "TRUE", "Need additional information to determine this:" , "County boundaries,Number of adults living in each county,Number of unemployed adults living in each county", "Valid", "Cannot determine from this plot", "Cannot determine from this plot")
)

tbl <- tmp2 |>
  left_join(
    key,
    by = "question"
  ) |>
  mutate(
    correct_answer = case_when(
      answer == correct ~ 1,
      TRUE ~ 0
    ),
    mc_question_num = rep(1:19, nrow(data)) #19 = MC Q | last value needs to be sample size
  ) |> 
  group_by(question, mc_question_num) %>%
  summarize(pct_correct = mean(correct_answer)) |>
  arrange(mc_question_num) |>
  as.data.frame()

tbl |>
  kbl() |>
  kable_styling() %>%
  row_spec(which(tbl$pct_correct <=.5), bold = T, color = "white", background = "red")


```

Could also use data tables

```{r}
tbl |>
  mutate(pct_correct = round(pct_correct, 3)) |>
  datatable(options = list(
    pageLength = 5, 
    language = list(search = 'Filter:'),
    lengthMenu = c(5,10,15,20)
  ))
```


## Storm Paths

The figure below shows a forecast after simulating 50 potential paths for a large storm. The two points (a) and (b) represent two cities. Which city is more likely to be hit by the storm?

![](images/storm.png)

**Question**: Which city is more likely to be hit by the storm?

```{r}
#| echo: false
s1 <- data |>
  select(`Storm Paths`) |>
  na.omit() |>
  count(`Storm Paths`) |>
  mutate(prop = n/sum(n))


color.me.storm <- which(s1$`Storm Paths` == "City a")

s1 %>% 
  kable(booktabs = T) %>%
  kable_styling() %>%
  row_spec(color.me.storm, bold = T, color = "white", background = "green")

s2 <- data |>
  select(`Storm Paths`) |>
  count(`Storm Paths`) |>
  mutate(prop = n/sum(n)) 

s2 |>
  kable(booktabs = T) %>%
  kable_styling() %>%
  row_spec(color.me.storm, bold = T, color = "white", background = "green")
  
```

